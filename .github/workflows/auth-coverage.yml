name: Auth Endpoints Coverage

on:
  push:
    paths:
      - 'backend/app/api/v1/endpoints/auth.py'
      - 'backend/app/tests/api/v1/test_auth_*.py'
  pull_request:
    paths:
      - 'backend/app/api/v1/endpoints/auth.py'
      - 'backend/app/tests/api/v1/test_auth_*.py'
  workflow_dispatch:

jobs:
  verify-auth-coverage:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-asyncio httpx coverage pyyaml
          pip install -r backend/requirements.txt
          
      - name: Run auth coverage enforcer
        env:
          DATABASE_URL: "sqlite:///./test.db"
          ACCESS_TOKEN_EXPIRE_MINUTES: "11520"
          SECRET_KEY: "testingsecretkey"
          TESTING: "True"
          PYTHONPATH: "${{ github.workspace }}"
        run: |
          # Run our specialized auth coverage enforcer
          python -m tools.auth_coverage_enforcer
          
      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: auth-coverage-reports
          path: |
            auth_coverage.xml
            auth_coverage_html/
            coverage.xml
          if-no-files-found: warn
