name: Security Coverage CI

on:
  push:
    branches: [ main, develop, feature/*, fix/* ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test-security-coverage:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-asyncio httpx coverage
          pip install -r backend/requirements.txt
          
      - name: Setup test environment
        run: |
          mkdir -p backend/app/tests/data
          touch backend/app/tests/data/test.db
          
      - name: Run auth endpoint tests with coverage
        env:
          DATABASE_URL: "sqlite:///./test.db"
          ACCESS_TOKEN_EXPIRE_MINUTES: "11520"
          SECRET_KEY: "testingsecretkey"
          TESTING: "True"
          PYTHONPATH: ${{ github.workspace }}
        run: |
          cd backend
          # Direct method without import issues
          python -c "from app.api.v1.endpoints import auth; print(f'Auth module found at {auth.__file__}')"
          
          # Run tests with direct pytest call
          python -m pytest app/tests/api/v1/test_auth*.py -v --cov=app.api.v1.endpoints.auth --cov-report=xml --cov-report=term
          
      - name: Verify security coverage requirements
        if: always()
        run: |
          cd backend
          if [ -f coverage.xml ]; then
            echo "Verifying ZephyrPay security coverage standards (95% for auth endpoints)..."
            python ../.github/scripts/verify_security_coverage.py coverage.xml
          else
            echo "Error: No coverage report generated"
            exit 1
          fi
          
      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-coverage-report
          path: backend/coverage.xml
          if-no-files-found: ignore
