name: Test Coverage CI

on:
  push:
    branches: [ main, develop, feature/*, fix/* ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-asyncio httpx
          pip install -r backend/requirements.txt
          
      - name: Setup test environment
        run: |
          mkdir -p backend/app/tests/data
          touch backend/app/tests/data/test.db
          
      - name: Run tests
        env:
          DATABASE_URL: "sqlite:///./test.db"
          ACCESS_TOKEN_EXPIRE_MINUTES: "11520"
          SECRET_KEY: "testingsecretkey"
          TESTING: "True"
        run: |
          cd backend
          python -m pytest -v --cov=app --cov-report=xml --cov-report=term-missing || true
        
      - name: Check file structure
        if: always()
        run: |
          echo "=== Repository Structure ==="
          find backend -type f -name "*.py" | grep -v "__pycache__" | sort
          
          echo "=== Test Files ==="
          find backend -name "test_*.py" | sort
          
          echo "=== Auth Components ==="
          find backend -path "**/endpoints/auth.py" -o -path "**/security.py" | xargs ls -la || true

      - name: Check coverage report
        if: always()
        run: |
          cd backend
          if [ -f coverage.xml ]; then
            echo "✅ Coverage report generated"
            python ../.github/scripts/check_coverage.py
          else
            echo "❌ No coverage report found"
          fi
          
      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: backend/coverage.xml
          if-no-files-found: ignore
